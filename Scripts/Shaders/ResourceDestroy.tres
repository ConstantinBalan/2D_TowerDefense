[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://bvfgim5fd1t42"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bwc0p"]
default_input_values = [0, 0.0, 1, 15.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_i3meq"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 2

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_k2sdk"]
default_input_values = [0, Vector3(1, 1, 1), 1, 1.0, 2, 2.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5q4ra"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_alcgy"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(50, 25)]
op_type = 0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_306nw"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(15, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8lm7b"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_msk2h"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_en2nd"]
function = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;





// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;
	float n_out2p2 = n_out2p0.g;


// Input:5
	float n_out5p0 = TIME;


// RandomRange:13
	vec3 n_in13p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_in13p1 = 1.00000;
	float n_in13p2 = 2.00000;
	float n_out13p0 = mix(n_in13p1, n_in13p2, hash_noise_range(n_in13p0).x);


// FloatOp:12
	float n_out12p0 = n_out5p0 * n_out13p0;


// FloatFunc:7
	float n_out7p0 = sin(n_out12p0);


// FloatOp:11
	float n_in11p1 = 15.00000;
	float n_out11p0 = n_out7p0 * n_in11p1;


// VectorCompose:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out11p0, n_in6p1, n_in6p2);


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p2 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out2p2 < n_in4p1)
	{
		n_out4p0 = n_out6p0;
	}
	else
	{
		n_out4p0 = n_in4p4;
	}


// VectorOp:3
	vec2 n_out3p0 = n_out2p0 + vec2(n_out4p0.xy);


// Output:0
	VERTEX = n_out3p0;


}
"
graph_offset = Vector2(-439.26, -138.223)
mode = 1
flags/light_only = false
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_5q4ra")
nodes/vertex/2/position = Vector2(-1420, 200)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_alcgy")
nodes/vertex/3/position = Vector2(-298.86, 200.231)
nodes/vertex/4/node = SubResource("VisualShaderNodeIf_306nw")
nodes/vertex/4/position = Vector2(-780, 400)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_8lm7b")
nodes/vertex/5/position = Vector2(-2740, 580)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorCompose_msk2h")
nodes/vertex/6/position = Vector2(-1240, 580)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatFunc_en2nd")
nodes/vertex/7/position = Vector2(-1920, 620)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatOp_bwc0p")
nodes/vertex/11/position = Vector2(-1600, 740)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_i3meq")
nodes/vertex/12/position = Vector2(-2240, 640)
nodes/vertex/13/node = SubResource("VisualShaderNodeRandomRange_k2sdk")
nodes/vertex/13/position = Vector2(-2700, 820)
nodes/vertex/connections = PackedInt32Array(2, 2, 4, 0, 2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 0, 0, 6, 0, 4, 5, 7, 0, 11, 0, 11, 0, 6, 0, 5, 0, 12, 0, 12, 0, 7, 0, 13, 0, 12, 1)
